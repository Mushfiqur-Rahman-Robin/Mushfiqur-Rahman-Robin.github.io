name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - migration/django-react-stack
  pull_request:
    branches:
      - main

jobs:
  backend-checks:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        run: pip install uv

      - name: Install backend dependencies
        working-directory: ./backend
        run: uv pip install -r requirements.txt && uv pip install -e ".[dev]"

      - name: Run linter (Ruff)
        working-directory: ./backend
        run: ruff check .

      - name: Run formatter check (Ruff)
        working-directory: ./backend
        run: ruff format --check .

      - name: Run tests (Pytest)
        working-directory: ./backend
        env:
          DATABASE_URL: postgres://test_user:test_password@localhost:5432/test_db
          SECRET_KEY: test-secret-key
          DEBUG: "False"
        run: pytest

  frontend-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run linter and type check
        working-directory: ./frontend
        run: npm run lint

      - name: Build project
        working-directory: ./frontend
        run: npm run build
